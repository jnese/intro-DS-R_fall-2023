{
  "hash": "0ef0f8358615a0575a8e8bb599faefa0",
  "result": {
    "markdown": "---\ntitle: \"Week 3: Data Visualization\"\nsubtitle: \"`{ggplot2}`\"\nauthor: \"Joe Nese\"\ninstitute: \"University of Oregon<br>Fall 2023\"\nformat:\n  revealjs: \n    theme: default\n    highlight-style: github\n    incremental: false\n    fig-width: 9\n    fig-height: 3.5\n    scrollable: true\n    multiplex: true\nexecute: \n  echo: true\n  warning: false\n  cache: true\n---\n\n\n\n\n## Housekeeping\n\n* Homework 1 due today\n* Groups due today\n  - I need emails from everyone by 5pm (if you have not already emailed)\n\n# Data Visualization with {ggplot2} \n\nWeek 3\n\n## Agenda {.smaller}\n\n`{ggplot2}`\n\n* syntax\n* continuous data visualizations\n* categorical data visualizations\n* options\n  + color/fill\n  + transparency\n  + labels\n  + facets\n\n**Learning Objectives**\n\n* Understand the basic syntax requirements for `{ggplot2}` \n* Recognize various options for displaying continuous and categorical data\n* Familiarity with various `{ggplot2}` options\n  + color/fill\n  + transparency\n  + labels\n  + facets\n\n# Share! \n\n\n## [`{datapasta}`](https://github.com/MilesMcBain/datapasta)\n\n* Copy and paste data to and from `R`\n* VERY handy!\n* Good for [reprex](https://github.com/tidyverse/reprex) \n  + posting questions on Rstudio Community or stackoverflow\n\n[**demo**]{style=\"color:#D55E00;\"}\n\n## \n\n![](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/b467ee99-87e3-4663-ae27-aaf027f940ce_rw_1920.png?h=0573cb8b960ba2f2c8486188761f03e0){width=\"70%\"}\n\n::: aside\nCredit [Allison Horst](https://allisonhorst.com/data-science-art)\n:::\n\n## Providing grammar for: {.smaller}\n\n* Graphics \n  + `{ggplot2}`\n* Data manipulations \n  + `{dplyr}`\n  + `{tidyr}`\n* Expanding area of specialized topics\n  + `{lubridate}`\n  + `{glue}`\n  + `{tidymodels}`\n* Many more...\n\n## Providing grammar for: {.smaller}\n\n* Graphics \n  + <mark>`{ggplot2}`</mark>\n* Data manipulations\n  + `{dplyr}`\n  + `{tidyr}`\n* Expanding area of specialized topics\n  + `{lubridate}`\n  + `{glue}`\n  + `{tidymodels}`\n* Many more...\n\n# {ggplot2}\n\n## The `{ggplot2}` package\n\n`gg` stands for the \"grammar of graphics\"\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](https://ggplot2-book.org/cover.jpg){width=\"50%\"}\n:::\n\n::: {.column width=\"50%\"}\n![](https://images-us.bookshop.org/ingram/9780387245447.jpg?height=500&v=v2)\n:::\n\n::::\n\n## Resources\n\nThe `{ggplot2}` package is one of the most popular `R` packages, and there are many resources to learn the syntax \n\n* ggplot2 book (email me for digital copy)\n* Posit [cheat sheet](https://rstudio.github.io/cheatsheets/html/data-visualization.html?_gl=1*1j49xha*_ga*MTM2MTAwMDI2MS4xNjk2OTY0NDAy*_ga_2C0WZ1JHG0*MTY5Njk2NDQwMi4xLjAuMTY5Njk2NDQwMi4wLjAuMA..)\n  + Can be helpful, perhaps more so after a little experience\n* [R Graphics Cookbook](http://www.cookbook-r.com/Graphs/)\n* [R Graph Gallery](https://www.r-graph-gallery.com/index.html)\n  + past students have really liked this one\n\n## Components {.smaller}\n\nEvery `ggplot` plot has three components\n\n1. **data**\n    + the `data` used to produce the plot\n2. **aesthetic mappings (`aes`)**\n    + between variables and visual properties \n3. **layer(s)**\n    + usually through the `geom_*()` function to produce geometric shapes to be rendered\n\n. . .\n\n**`ggplot()` always takes a data frame (tibble) as the first argument**\n\n## Basic syntax {.smaller}\n\n[ggplot(]{style=\"color:#D55E00\"}[data]{style=\"color:#0072B2\"}, [aes(]{style=\"color:#009E73\"}x = xvar, y = yvar[)]{style=\"color:#009E73\"}[)]{style=\"color:#D55E00\"} [+]{style=\"color:#CC79A7\"} <br> [geom_function()]{style=\"color:#E69f00\"}\n\n. . .\n\n[ggplot()]{style=\"color:#D55E00\"} = the function is `ggplot` and the package is `{ggplot2}` \n\n. . .\n\n[data]{style=\"color:#0072B2\"} = the data to be plotted\n\n. . .\n\n[aes(]{style=\"color:#009E73\"}x = xvar, y = yvar[)]{style=\"color:#009E73\"} = the `aes`thetic mappings\n\n. . .\n\n[geom_function()]{style=\"color:#E69f00\"} = the `geom`etrics of the plot; the \"[function()]{style=\"color:#E69f00\"}\" here represents any of the `geom_*` offerings\n\n. . .\n\n::: {.fragment}\n<mark>note the [+]{style=\"color:#CC79A7\"} and <ins>NOT</ins> the `%>%`</mark>\n:::\n\n## `{ggplot2}` template\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-1_b41e02500e1d76b6ea172b17c5a7fb53'}\n\n```{.r .cell-code}\nggplot(data, aes(mappings)) +\n  geom_function()\n```\n:::\n\n\n. . .\n\nor equivalently\n\n. . .\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-2_149e2ba9e5f8b545b279a4648e7e2452'}\n\n```{.r .cell-code}\ndata %>% \n  ggplot(aes(mappings)) +\n  geom_function()\n```\n:::\n\n\n\n## Some data for today ![](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png){fig-align=\"right\" width=\"10%\"} \n\n[run the following]{style=\"color:#D55E00;\"}\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-3_4df87e386317276c3da4e42f74c7088c'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nhead(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n# Continuous Data\n\n## Setting up a plot\n\nRun the following code. What do you see?\n\n\n::: {.cell output-location='slide' hash='w3_ggplot2_cache/revealjs/pengemp_abe2d6e95fc891c56b05811c296b27aa'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/pengemp-1.png){width=864}\n:::\n:::\n\n\n## Setting up a plot\n\nWe have to add some layers!\n\n![](./images/owl.PNG)\n\n## Setting up a plot\n\nIt's ready for you to add some `geom`etric <ins>layers</ins>...what should we add?\n\n## How about points?\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/unnamed-chunk-4_f8720f9ee218535227de78876ef8b328'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-4-1.png){width=864}\n:::\n:::\n\n\n## Adding layers\n\n* In the previous slide, we added a layer of points\n* The `geom_point()` layer is a function, complete with it's own arguments\n\n. . .\n\nLet’s change the color of the points\n\nHow would you change the color of the points? \n\t\n<ins>or</ins> \n\nHow would you find out about changing the color of the points?\n\n. . .\n\n`?geom_point`\n\n## `color`\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/peng-2_09b58a48f59e6889db2a1343f865e4c7'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"magenta\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/peng-2-1.png){width=864}\n:::\n:::\n\n\n\n## Add another layer\n\nLet's add a smoothed line with `geom_smooth()`\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/unnamed-chunk-5_e444cd356324412569ee4c1a04fa7b3d'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"magenta\") + \n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-5-1.png){width=864}\n:::\n:::\n\n\n## Add another layer\n\nLet's add a smoothed line with `geom_smooth()`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-6_3e1209f5b7dd40ab6da814ed88b1ea48'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"magenta\") + \n  geom_smooth()\n```\n:::\n\n\n*Note*: This is **not** the same as `geom_line()`. We are fitting a line of best fit with `geom_smooth()`\n\n## You try\n\nYou probably got the [message]{style=\"color:#CC79A7;\"} below when you ran (defaults)\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/peng-4_3c909709115f40740cdf4f2e03089897'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"magenta\") + \n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/peng-4-1.png){width=864}\n:::\n:::\n\n\n. . .\n\nChange the `method` to `\"lm\"`\n\n## Let's do this one together\n\nLook at the help page – `?geom_smooth` \n\n1. Remove the `confidence` interval around the line\n\n2. Now change the `*SE*` band to reflect a 68% confidence interval\n\n## `color`: global vs. conditional \n\nPrior examples changed colors globally\n\n- `geom_point(color = \"magenta\")`\n\n. . .\n\nUse `aes()` to access variables, and color according to a specific variable\n\n. . .\n\n- We use variable names within `aes()`\n\n. . .\n\nLet’s check the data again (`head()`) and the \"species\" variable (`table()`) \n\n. . .\n\n[let's do this together]{style=\"color:#D55E00;\"}\n\n##\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/peng-5_effa48f4d55555c879fc34b57dc191a5'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(aes(color = species)) \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/peng-5-1.png){width=864}\n:::\n:::\n\n\n## `color`: global vs. conditional \n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-7_7e28554f20b185f3edda808e06bac791'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(aes(color = species))\n```\n:::\n\n\n* When we did `geom_point(color = \"magenta\")` we put quotes around the color \n* Why now is \"species\" not in quotes?\n\n. . .\n\n* color names/hex codes are in quotes **NOT** in the `aes()`\n* variable names are in the `aes()` **NOT** in quotes\n* `aes()` is where you map to your data!\n\n## Conditional flow through layers {.smaller}\n\nIf we use something like `color = “x”` in the first `aes`thetic, it will carry on through all additional layers\n\nThese two codes are the same:\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-8_bddf774a9102b242e128d7e46c233441'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(aes(color = species))\n```\n:::\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-9_f463d99adcfd826f105aab830b10d9f0'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g, color = species)) +\n  geom_point()\n```\n:::\n\n\n. . .\n\nBut these two are not...why? [run to find out]{style=\"color:#D55E00;\"}\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-10_541f320cf425ea44d0e10d8f9bb63431'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(aes(color = species)) + \n  geom_smooth()\n```\n:::\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-11_813d7da6bd9e8a2db62a106ae603ce39'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth()\n```\n:::\n\n\n## Be mindful with `aes()`\n\nUsing `aes()` when you **don't** need it\n\nWhat is happening here?\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-12_722ef8e83396f3eaef2aa8f8bf8faf23'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(aes(color = \"blue\")) + \n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-12-1.png){width=864}\n:::\n:::\n\n\n## Be mindful with `aes()`\n\n**Not** using `aes()` when you need it\n\nWhat is happening here?\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-13_745225898af5fae8dd2fa3b73d7d1dab'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = species) + \n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in list2(na.rm = na.rm, ...): object 'species' not found\n```\n:::\n:::\n\n\n::: aside\nKind of helpful message here.\n:::\n\n# Themes\n\n## Let's talk themes\n\n* The default is `theme_gray()`\n  + I don't like it\n* But there are a lot of build-in alternative in `{ggplot2}`\n  + `theme_minimal()` is my favorite\n* Check out the [`{ggthemes}`](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) package for a lot of alternatives\n  + These days I often use the [`colorblind`](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/colorblind/) theme for discrete values in my plots\n* Check out the [`{ggthemeassist}`](https://github.com/calligross/ggthemeassist) add-in\n\n# More themes\n\n* The [`{hrbrthemes}`](https://github.com/hrbrmstr/hrbrthemes) are nice\n* Consider [building your own theme!](https://bookdown.org/rdpeng/RProgDA/building-a-new-theme.html)\n* Or Google around\n\n. . .\n\n* Set the theme globally\n  + One of the first lines in your .qmd file (after you load packages) could be:\n  \n`theme_set(theme_minimal())`\n\n## Get a little fancy\n\n* You can use `geom_point()` for more than one layer\n* You can also use a different data source on a layer\n* Use these two properties to highlight points\n  + How about penguins from Torgersen Island?\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-14_81ebb7c5d087c3f0fe62bb9701abebff'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"black\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-14-1.png){width=864}\n:::\n:::\n\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-15_58b809d775ac141681751a9064594067'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"black\") + \n  geom_point(data = dplyr::filter(penguins, island == \"Torgersen\"), color = \"magenta\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-15-1.png){width=864}\n:::\n:::\n\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-16_3b7346b75c9fe6acf08756e4494c42d0'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"black\") + \n  geom_point(data = dplyr::filter(penguins, island == \"Torgersen\"), color = \"magenta\") + \n  geom_smooth(se = FALSE)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-16-1.png){width=864}\n:::\n:::\n\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-17_0d13d92c61b182f261895588abc095b4'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"black\") + \n  geom_point(data = dplyr::filter(penguins, island == \"Torgersen\"), color = \"magenta\") + \n  geom_smooth(se = FALSE) + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-17-1.png){width=864}\n:::\n:::\n\n\n## Another option\n\n`{gghighlight}` varying flexibility\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-18_e9a19ac71b129b8786bb7ed39af391fb'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) +\n  geom_point(color = \"magenta\") + \n  gghighlight::gghighlight(island == \"Torgersen\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-18-1.png){width=864}\n:::\n:::\n\n\n## Line plots\n\n* When should you use line plots instead of smooths?\n\n. . .\n\n    + usually when time is involved\n\n. . .\n\n\n* What are some good candidate data for line plots?\n\n. . .\n\n    + observed versus model-implied (estimated)\n\n## `geom_line()`\n\nClassic time series example \n\n`economics` data from `{ggplot2}`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-19_b058da58fc79f05206f618ebe856b873'}\n\n```{.r .cell-code}\neconomics\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 574 × 6\n   date         pce    pop psavert uempmed unemploy\n   <date>     <dbl>  <dbl>   <dbl>   <dbl>    <dbl>\n 1 1967-07-01  507. 198712    12.6     4.5     2944\n 2 1967-08-01  510. 198911    12.6     4.7     2945\n 3 1967-09-01  516. 199113    11.9     4.6     2958\n 4 1967-10-01  512. 199311    12.9     4.9     3143\n 5 1967-11-01  517. 199498    12.8     4.7     3066\n 6 1967-12-01  525. 199657    11.8     4.8     3018\n 7 1968-01-01  531. 199808    11.7     5.1     2878\n 8 1968-02-01  534. 199920    12.3     4.5     3001\n 9 1968-03-01  544. 200056    11.7     4.1     2877\n10 1968-04-01  544  200208    12.3     4.6     2709\n# ℹ 564 more rows\n```\n:::\n:::\n\n\n## Let's try it\n\nHow do you think we'd fit a line plot to these data, showing unemployment (\"_unemploy_\") over time?\n\n. . .\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-20_32c85b29de99ef7487882db353fcd3e2'}\n\n```{.r .cell-code}\nggplot(economics, aes(date, unemploy)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n\n## Layers\n\nWhat happens when we layer geom_line and geom_point?\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-21_4018acbbf800887a0626c9d39132f4ca'}\n\n```{.r .cell-code}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  geom_point()\n```\n:::\n\n\n[try it!]{style=\"color:#D55E00;\"}\n\n. . .\n\nNot the best instance of this\n\nIt would work better on a plot with fewer time points, but you get the idea\n\n# Labels\n\n`labs()`\n\n## Axis Labels\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-1_55d5f3b8a80e2e1090ad20e886cafb91'}\n\n```{.r .cell-code  code-line-numbers=\"|4|5\"}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Date\",\n       y = \"Unemployment\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-1-1.png){width=864}\n:::\n:::\n\n\n## Title\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-2_7bc33ac2f55c83fb2a36d7a5b96ce5e1'}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Date\", \n       y = \"Unemployment\",\n       title = \"Unemployment Over Time\") \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-2-1.png){width=864}\n:::\n:::\n\n\n## Subtitle\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-3_8e69d968b0c42c4e54349bc491c24d7e'}\n\n```{.r .cell-code  code-line-numbers=\"|7\"}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Date\", \n       y = \"Unemployment\",\n       title = \"Unemployment Over Time\",\n       subtitle = \"This is the subtitle\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-3-1.png){width=864}\n:::\n:::\n\n\n## Caption\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-4_327d4c155bbb6a8e919e361894b6d6f8'}\n\n```{.r .cell-code  code-line-numbers=\"|8\"}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Date\", \n       y = \"Unemployment\",\n       title = \"Unemployment Over Time\",\n       subtitle = \"This is the subtitle\",\n       caption = \"Created by Joe Nese\") \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-4-1.png){width=864}\n:::\n:::\n\n\n## Tag\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-5_e7f15f6d7ad4e951e47858d5e0ef8b47'}\n\n```{.r .cell-code  code-line-numbers=\"|9\"}\nggplot(economics, aes(date, unemploy)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Date\", \n       y = \"Unemployment\",\n       title = \"Unemployment Over Time\",\n       subtitle = \"This is the subtitle\",\n       caption = \"Created by Joe Nese\",\n       tag = \"(A)\") \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-5-1.png){width=864}\n:::\n:::\n\n\n## Legend (one way)\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/axes-6_180dcbf466bf9f847a88ee6a717fe807'}\n\n```{.r .cell-code  code-line-numbers=\"|1,6\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g, color = species)) + # 'color = '\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\",\n       y = \"Body Mass (g)\",\n       color = \"Species!\") # 'color = '\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/axes-6-1.png){width=864}\n:::\n:::\n\n\n# Facets\n\n## Faceting\n\n* One of the most powerful features of `{ggplot2}`\n* Produce *n* plots by a specific variable\n\n* `facet_wrap()`\n  + wrap a sequence of panels into two dimensions\n  + based on variables(s)\n\n## Faceting\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/facet-1_3c9f6e068e497ac76bf42acc2e5f6cde'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) + \n  geom_point() +\n  geom_smooth() +\n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/facet-1-1.png){width=864}\n:::\n:::\n\n\n## Careful about the `~`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-22_2f062f028f54d07b3b001a49f415d10b'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) + \n  geom_point() +\n  geom_smooth() +\n  facet_wrap(species)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in validate_facets(x): object 'species' not found\n```\n:::\n:::\n\n\n## Faceting \n\ntwo variables (like a matrix)\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-23_3f268a54b2a48c62e271b22bdd7b45bc'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) + \n  geom_point() +\n  geom_smooth() +\n  facet_wrap(species ~ year) \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-23-1.png){width=864}\n:::\n:::\n\n\n## Alternative specification - `vars()`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-24_6e655d2d3e58a85430cbbad508a791b4'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) + \n  geom_point() +\n  geom_smooth() +\n  facet_wrap(vars(species))\n```\n:::\n\n\n<br>\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-25_fa82fef2af579b571a6007c37527ca20'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(penguins, aes(bill_length_mm, body_mass_g)) + \n  geom_point() +\n  geom_smooth() +\n  facet_wrap(vars(species, year))\n```\n:::\n\n\n# Heatmaps\n\n> A heatmap is a literal way of visualizing a table of numbers, where you substitute the numbers with colored cells. <br> - Nathan Yau\n\n* Useful for finding highs and lows  - and sometimes patterns\n* They don't always work well\n\n## Example with correlations\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-26_fa3c3fded1585bf2fa54fb7ed26aca66'}\n\n```{.r .cell-code}\ncorr <- cor(mtcars)\n\npc <- corr %>% \n  as.data.frame() %>% \n  mutate(row = rownames(.)) %>% \n  pivot_longer(\n    cols = -row,\n    names_to = \"col\",\n    values_to = \"cor\"\n  )\n\nhead(pc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  row   col      cor\n  <chr> <chr>  <dbl>\n1 mpg   mpg    1    \n2 mpg   cyl   -0.852\n3 mpg   disp  -0.848\n4 mpg   hp    -0.776\n5 mpg   drat   0.681\n6 mpg   wt    -0.868\n```\n:::\n:::\n\n\n## Heatmap\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-27_14b6c2b78de16d71762f365f8fb263e2'}\n\n```{.r .cell-code}\nggplot(pc, aes(row, col, fill = cor)) +\n  geom_tile()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-27-1.png){width=864}\n:::\n:::\n\n\n## Viridis\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-28_21d7963216137222f3cde3846fb09402'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(pc, aes(row, col, fill = cor)) +\n  geom_tile() +\n  scale_fill_viridis_c() \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-28-1.png){width=864}\n:::\n:::\n\n\n# Categorical Data\n\n## Data\n\n`{fivethirtyeight}` package\n\ndataset is `college_grad_students`\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/unnamed-chunk-29_31ff27b2b18e51e156c8f0035ab037c3'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n\n#install.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight)\n# View(college_grad_students)\ngrad <- college_grad_students # simpler reference\ngrad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 173 × 22\n   major_code major     major_category grad_total grad_sample_size grad_employed\n        <int> <chr>     <chr>               <int>            <int>         <int>\n 1       5601 Construc… Industrial Ar…       9173              200          7098\n 2       6004 Commerci… Arts                53864              882         40492\n 3       6211 Hospital… Business            24417              437         18368\n 4       2201 Cosmetol… Industrial Ar…       5411               72          3590\n 5       2001 Communic… Computers & M…       9109              171          7512\n 6       3201 Court Re… Law & Public …       1542               22          1008\n 7       6206 Marketin… Business           190996             3738        151570\n 8       1101 Agricult… Agriculture &…      17488              386         13104\n 9       2101 Computer… Computers & M…       5611               98          4716\n10       1904 Advertis… Communication…      33928              688         28517\n# ℹ 163 more rows\n# ℹ 16 more variables: grad_employed_fulltime_yearround <int>,\n#   grad_unemployed <int>, grad_unemployment_rate <dbl>, grad_p25th <dbl>,\n#   grad_median <dbl>, grad_p75th <int>, nongrad_total <int>,\n#   nongrad_employed <int>, nongrad_employed_fulltime_yearround <int>,\n#   nongrad_unemployed <int>, nongrad_unemployment_rate <dbl>,\n#   nongrad_p25th <dbl>, nongrad_median <dbl>, nongrad_p75th <dbl>, …\n```\n:::\n:::\n\n\n## Histogram\n\nHistogram of \"grad_total\"\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-30_c3c40dfe6d312727b35a62d7a61e4e25'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-30-1.png){width=768}\n:::\n:::\n\n\n## Transparency - `alpha`\n\nAdd some transparency – perhaps this looks nicer\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-31_59c96b8c054c2dbe310f6efbee98a91d'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram(alpha = 0.7) \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-31-1.png){width=768}\n:::\n:::\n\n\n## `color` vs. `fill`\n\n**In general**\n\n* `color` defines the color a geom is *outlined*\n* `fill` defines the color a geom is *filled* \n\n## `color` vs. `fill`\n\nFor example:\n\n* `geom_point()` default has only has a color and **NO** fill because they're just points\n* Point shapes 21–24 include both a color and a fill\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-32_4a9c4dc52489cc59fc54a71b82330bea'}\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-32-1.png){width=864}\n:::\n:::\n\n\n## How would we change the color of this plot?\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-33_97394a3a133228b733fc7e2262ff6180'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram(alpha = 0.7)\n```\n:::\n\n\n## How would we change the color of this plot?\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-34_9eb8c339bb2f57a222868beb64f7d1eb'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram(alpha = 0.7, color = \"magenta\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-34-1.png){width=768}\n:::\n:::\n\n\n## How would we change the ~~color~~ fill of this plot?\n\n. . .\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-35_90cdd4b53ea2557301ee8edcd89fc7a1'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram(alpha = 0.7, fill = \"magenta\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-35-1.png){width=768}\n:::\n:::\n\n\n## Color by variable\n\nWhat if we wanted different colors by a variable -- *major_category*\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-36_ca3c16ae9d8043d289ff4caf10513da4'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_histogram(aes(fill = major_category), alpha = 0.7)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-36-1.png){width=768}\n:::\n:::\n\n\n## Density plot\n\nAlternative representation of distribution\n\n* Think of it as a smoothed histogram (uses kernel smoothing)\n* The depiction of the distribution is **NOT** determined by the number of the bins you use, as are histograms\n\n## Density plot\n\n`geom_density()`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-37_3b3e196ed3bd13c5419457d2836fd313'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-37-1.png){width=768}\n:::\n:::\n\n\n## Density plot\n\nNow let’s fill by *major_category*\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-38_27204ce5107a5aa7aab7e34b4ea55a03'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_density(aes(fill = major_category), alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-38-1.png){width=768}\n:::\n:::\n\n\n::: {.fragment}\nNot a good plot, just an example\n:::\n\n## Possible alternative? `facet_wrap`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-39_22f5faaf28a5cfeaf5dc9feb37f853ef'}\n\n```{.r .cell-code}\nggplot(grad, aes(x = grad_total)) +\n  geom_density(alpha = 0.2) +\n  facet_wrap(~major_category) #<<\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-39-1.png){width=960}\n:::\n:::\n\n\n## Even better\n\ndensity ridges `{ggridges}`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-40_b2acfbeb70f84c7014ad5c21edb8a28b'}\n\n```{.r .cell-code}\nlibrary(ggridges)\n\nggplot(grad, aes(x = grad_total, y = major_category)) +\n  geom_density_ridges()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-40-1.png){width=768}\n:::\n:::\n\n\n## Density  Ridges\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-41_22285e860301791bae93966386a2ebd8'}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm , species)) +\n  geom_density_ridges()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-41-1.png){width=864}\n:::\n:::\n\n\n## `fill` \n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-42_068fd10a35cc37925324f195fc0787a2'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(penguins, aes(bill_length_mm , species)) +\n  geom_density_ridges(aes(fill = factor(year)))\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-42-1.png){width=864}\n:::\n:::\n\n\n## Add transparency for clarity\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-43_1b725f995adb848afd7145bcb625bd66'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(penguins, aes(bill_length_mm , species)) +\n  geom_density_ridges(aes(fill = factor(year)), alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-43-1.png){width=864}\n:::\n:::\n\n\n## Viridis\n\n* easier to read by those with colorblindness \n* prints well in gray scale\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-44_ff620541f35440622973efa37afeac7e'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(penguins, aes(bill_length_mm , species)) +\n  geom_density_ridges(aes(fill = factor(year)), alpha = 0.5) +\n  scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-44-1.png){width=864}\n:::\n:::\n\n\n## Same fill function, different \"`option`\"\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-45_77023565427503d3081cd929990fac63'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(penguins, aes(bill_length_mm , species)) +\n  geom_density_ridges(aes(fill = factor(year)), alpha = 0.7) +\n  scale_fill_viridis_d(option = \"plasma\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-45-1.png){width=768}\n:::\n:::\n\n\n## Candy rankings `{fivethirtyeight}`\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/unnamed-chunk-46_dd9ef9ca9073b273bccb8d2a7eb647d7'}\n\n```{.r .cell-code}\ncandy <- candy_rankings %>% \n  pivot_longer(\n    cols = chocolate:pluribus,\n    names_to = \"type\",\n    values_to = \"foo\") %>% \n  filter(foo) %>% \n  select(-foo)\n\ncandy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 197 × 5\n   competitorname sugarpercent pricepercent winpercent type            \n   <chr>                 <dbl>        <dbl>      <dbl> <chr>           \n 1 100 Grand             0.732        0.860       67.0 chocolate       \n 2 100 Grand             0.732        0.860       67.0 caramel         \n 3 100 Grand             0.732        0.860       67.0 crispedricewafer\n 4 100 Grand             0.732        0.860       67.0 bar             \n 5 3 Musketeers          0.604        0.511       67.6 chocolate       \n 6 3 Musketeers          0.604        0.511       67.6 nougat          \n 7 3 Musketeers          0.604        0.511       67.6 bar             \n 8 Air Heads             0.906        0.511       52.3 fruity          \n 9 Almond Joy            0.465        0.767       50.3 chocolate       \n10 Almond Joy            0.465        0.767       50.3 peanutyalmondy  \n# ℹ 187 more rows\n```\n:::\n:::\n\n\n## Boxplot\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-47_1c6710839ecf97a48d3ee84a86af963b'}\n\n```{.r .cell-code}\nggplot(candy, aes(type, sugarpercent)) +\n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-47-1.png){width=864}\n:::\n:::\n\n\n## Violin plots\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-48_4f63a416031ab1dd31ba6a97d0e3a0de'}\n\n```{.r .cell-code}\nggplot(candy, aes(type, sugarpercent)) +\n  geom_violin() \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-48-1.png){width=864}\n:::\n:::\n\n\n## Bar Charts\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-49_f47fe77f7fce9e3a64d3fc0ad452128c'}\n\n```{.r .cell-code}\nhead(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n  <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\n4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…\n5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…\n6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…\n```\n:::\n:::\n\n\n## Bar/Col Charts {.smaller}\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**`geom_bar()`**\n\n* expects *x* **OR** *y*\n* counts rows\n* if you want to count the number of cases at each *x* or *y* position \n* makes the height of the bar proportional to the number of cases in each group\n* uses `stat_count()` by default\n\n:::\n\n::: {.column width=\"50%\"}\n**`geom_col()`**\n\n* expects *x* **AND** *y*\n* expects numbers in your data\n* if you want the heights of the bars to represent values in the data\n* leaves the data as is\n* uses `stat_identity()` by default\n\n:::\n::::\n\n## `geom_bar()`\n\n*mpg* data\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-50_737a4220386a0916645d4e29a6e47d0a'}\n\n```{.r .cell-code}\nggplot(mpg, aes(class)) + # one variable in the `aes()`\n  geom_bar() # counts the rows per class\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-50-1.png){width=960}\n:::\n:::\n\n\n## *summarized_mpg* data\n\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-51_de12435c4d9636ee09dbd5d7a9e17f41'}\n\n```{.r .cell-code}\nsummarized_mpg <- mpg %>% \n  group_by(class) %>% \n  count()\n\nhead(summarized_mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n# Groups:   class [6]\n  class          n\n  <chr>      <int>\n1 2seater        5\n2 compact       47\n3 midsize       41\n4 minivan       11\n5 pickup        33\n6 subcompact    35\n```\n:::\n:::\n\n\n## `geom_col()`\n\n*summarized_mpg* data\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-52_8f1bbe51c23ddeef11c173f8eac15401'}\n\n```{.r .cell-code}\nggplot(summarized_mpg, aes(class, n)) + # two variables in the `aes()`\n  geom_col() # data has the rows per class in \"n\"\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n\n##\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n`geom_bar()` default\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-53_ee1b5b35e9be1d67af3d67bb8560ff1b'}\n\n```{.r .cell-code}\nggplot(mpg, aes(class)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-53-1.png){width=864}\n:::\n:::\n\n::: \n\n::: {.column width=\"60%\" .fragment}\n\n`geom_bar(stat = \"identity\")` \n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-54_34ac4a61bd95c1010c81072a618e4214'}\n\n```{.r .cell-code}\nggplot(summarized_mpg, aes(class, n)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-54-1.png){width=864}\n:::\n:::\n\n:::\n\n::::\n\n##\n\n:::: columns\n\n::: {.column width=\"40%\"}\n`geom_bar()` default\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-55_0f924623b4c15f498c6c96d2005870f4'}\n\n```{.r .cell-code}\nggplot(mpg, aes(class)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-55-1.png){width=864}\n:::\n:::\n\n:::\n\n::: {.column width=\"60%\" .fragment}\n`geom_col()` default\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-56_d0853b203054cd25aa9718a2f88419ef'}\n\n```{.r .cell-code}\nggplot(summarized_mpg, aes(class, n)) + \n  geom_col()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-56-1.png){width=864}\n:::\n:::\n\n:::\n\n::::\n\n##\n\n:::: columns\n\n::: {.column width=\"40%\"}\n`geom_bar()` default\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-57_eee56c252fb2dca43e1eacd81430abe8'}\n\n```{.r .cell-code}\nggplot(mpg, aes(class)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-57-1.png){width=864}\n:::\n:::\n\n:::\n\n::: {.column width=\"60%\" .fragment}\n`geom_bar()` uh-oh\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-58_b36e783968541227503c423e1ac3dce3'}\n\n```{.r .cell-code}\nggplot(summarized_mpg, aes(class)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-58-1.png){width=864}\n:::\n:::\n\n:::\n\n::::\n\n## What happened?\n\nLet's look at our data again\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-59_e3d3f0a93ca0cdc5939036ad36ca64dc'}\n\n```{.r .cell-code}\nsummarized_mpg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n# Groups:   class [7]\n  class          n\n  <chr>      <int>\n1 2seater        5\n2 compact       47\n3 midsize       41\n4 minivan       11\n5 pickup        33\n6 subcompact    35\n7 suv           62\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-60_72bc010326767fa76ca85c1553c617f1'}\n\n```{.r .cell-code}\nggplot(summarized_mpg, aes(class)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-60-1.png){width=864}\n:::\n:::\n\n:::\n\n::::\n\n## Change the order of the *x*-axis\n\n* We'll talk about betters methods for this when we talk about `factors` in Week 9\n* Basically - define *x*-axis variable as a `factor` with levels in the order you want\n\n. . .\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-61_1b6313b6da176e6df454a8b9ef118014'}\n\n```{.r .cell-code}\n(mean_hmiles <- mpg %>% \n  group_by(class) %>% \n  summarize(mean_hwy = mean(hwy)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n  class      mean_hwy\n  <chr>         <dbl>\n1 2seater        24.8\n2 compact        28.3\n3 midsize        27.3\n4 minivan        22.4\n5 pickup         16.9\n6 subcompact     28.1\n7 suv            18.1\n```\n:::\n:::\n\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-62_6a78e0b55f5d7110f1302c8b2fa5a06b'}\n\n```{.r .cell-code}\nmean_hmiles %>%\n  ggplot(aes(class, mean_hwy)) + \n  geom_col()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-62-1.png){width=864}\n:::\n:::\n\n\n##\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-63_5b2b2884a086a13aa9291c012e379ca0'}\n\n```{.r .cell-code}\nmean_hmiles %>%\n  mutate(class = factor(class,\n                        levels = c(\"pickup\",\n                                   \"suv\",\n                                   \"minivan\",\n                                   \"2seater\",\n                                   \"midsize\",\n                                   \"subcompact\",\n                                   \"compact\"))) %>%\n  ggplot(aes(class, mean_hwy)) + \n  geom_col()\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-63-1.png){width=864}\n:::\n:::\n\n\n\n## More bar plot options {.smaller}\n\n\n::: {.cell output-location='fragment' hash='w3_ggplot2_cache/revealjs/unnamed-chunk-64_130672ba046541c5dc100751a9a9e84a'}\n\n```{.r .cell-code}\neclsk <- haven::read_sav(here::here(\"data\", \"ecls-k_samp.sav\")) %>% \n  rio::characterize() %>% \n  janitor::clean_names()\n\necls_smry <- eclsk %>%\n    group_by(k_type, ethnic) %>%\n    summarize(t1r_mean = mean(t1rscale))\n\necls_smry\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 3\n# Groups:   k_type [2]\n   k_type   ethnic                                  t1r_mean\n   <chr>    <chr>                                      <dbl>\n 1 full-day AMERICAN INDIAN OR ALASKA NATIVE            17.5\n 2 full-day ASIAN                                       31.8\n 3 full-day BLACK OR AFRICAN AMERICAN, NON-HISPANIC     21.1\n 4 full-day HISPANIC, RACE NOT SPECIFIED                20.3\n 5 full-day HISPANIC, RACE SPECIFIED                    22.3\n 6 full-day MORE THAN ONE RACE, NON HISPANIC            20.8\n 7 full-day NATIVE HAWAIIAN, OTHER PACIFIC ISLANDER     23.2\n 8 full-day WHITE, NON-HISPANIC                         25.5\n 9 half-day AMERICAN INDIAN OR ALASKA NATIVE            30.0\n10 half-day ASIAN                                       25.1\n11 half-day BLACK OR AFRICAN AMERICAN, NON-HISPANIC     18.6\n12 half-day HISPANIC, RACE NOT SPECIFIED                18.7\n13 half-day HISPANIC, RACE SPECIFIED                    20.0\n14 half-day MORE THAN ONE RACE, NON HISPANIC            20.3\n15 half-day NATIVE HAWAIIAN, OTHER PACIFIC ISLANDER     19.7\n16 half-day WHITE, NON-HISPANIC                         23.7\n```\n:::\n:::\n\n\n## Stacked bar plot\n\nLook for effects in \"ethnicity\" by \"k_type\" (full/half day K)\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-65_336b989e232d4383de1bdca96b5b552f'}\n\n```{.r .cell-code}\nggplot(ecls_smry, aes(ethnic, t1r_mean)) +\n    geom_col(aes(fill = k_type))\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-65-1.png){width=960}\n:::\n:::\n\n\n## Grouped bar plot\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-66_b53554fd4c1fbb0c949bb548a2405117'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(ecls_smry, aes(ethnic, t1r_mean)) +\n    geom_col(aes(fill = k_type),\n             position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-66-1.png){width=960}\n:::\n:::\n\n\n## Rotating Labels\n\nI have to look [this](https://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2) up *every* time\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-67_92ea7f814c93a03a5592985f78af4c65'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(ecls_smry, aes(ethnic, t1r_mean)) +\n  geom_col(aes(fill = k_type),\n           position = \"dodge\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-67-1.png){width=960}\n:::\n:::\n\n\n## Flip the coordinates\n\n`coord_flip()`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-68_dd772eb30c26677b05b49bff0413807d'}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nggplot(ecls_smry, aes(ethnic, t1r_mean)) +\n  geom_col(aes(fill = k_type),\n           position = \"dodge\") +\n  coord_flip() \n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-68-1.png){width=960}\n:::\n:::\n\n\n## Alternatively\n\n`facet_wrap()`\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-69_c8e8622eb6ee6ea4ae994dc34ebceebd'}\n\n```{.r .cell-code}\nggplot(ecls_smry, aes(k_type, t1r_mean)) +\n    geom_col(alpha = 0.8) +\n    facet_wrap(~ethnic)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-69-1.png){width=960}\n:::\n:::\n\n\n## Sometimes some redundancy works well\n\n\n::: {.cell hash='w3_ggplot2_cache/revealjs/unnamed-chunk-70_0069fc274c707620c1a48b448a42c8f0'}\n\n```{.r .cell-code}\nggplot(ecls_smry, aes(k_type, t1r_mean, fill = k_type)) +\n    geom_col(alpha = 0.8) +\n    facet_wrap(~ethnic)\n```\n\n::: {.cell-output-display}\n![](w3_ggplot2_files/figure-revealjs/unnamed-chunk-70-1.png){width=960}\n:::\n:::\n\n\n## `geom_*()` Review {.smaller}\n\n* `geom_point()`\n* `geom_smooth()`\n* `geom_line()`\n* `geom_tile()`\n* `geom_histogram()`\n* `geom_density()`\n* `ggridges::geom_density_ridges()`\n* `geom_boxplot()`\n* `geom_violin()`\n* `geom_bar()`\n* `geom_col()`\n\n## Challenge {.smaller}\n\n* Start a new `R` project\n* Create a new script, save it as \"practice-plots.R\"\n* Load the `{tidyverse}`\n* Print the **msleep** dataset to see it's structure (it's from `{ggplot2}`)\n\nFor each of the following, produce a separate plot\n\n1. Plot the relation between \"sleep_total\" and \"brainwt\" (with \"brainwt\" as the DV) - scatter plot\n2. Overlay a smooth on the previous plot\n3. Color the points by \"vore\", but fit a single smooth\n4. Fit separate smooths by \"vore\", but with all points being gray\n5. Omit the standard error of the smooths\n6. Use `ylim()` as an additional layer to restrict the *y*-axis to range from 0 to 5\n\n# Next time\n\n## Before next class {.smaller}\n\n* Reading\n  + [R4DS(2e) 4](https://r4ds.hadley.nz/data-transform)\n* Supplemental Learning\n  + [RStudio Primer: Working with Tibbles](https://posit.cloud/learn/primers/2.1)\n  + [Rbootcamp: Ch 3](https://r-bootcamp.netlify.app/chapter3)\n  + [Codecademy: Aggregates in R](https://www.codecademy.com/courses/learn-r/lessons/r-aggregates/exercises/column-statistics)\n* Homework\n  + **Homework 2**\n  + **Homework 3**\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}